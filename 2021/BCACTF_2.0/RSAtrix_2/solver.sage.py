

# This file was *autogenerated* from the file solver.sage
from sage.all_cmdline import *   # import sage library

_sage_const_94653748632775872562206813156858988240379536044871601072940225022186828970998253 = Integer(94653748632775872562206813156858988240379536044871601072940225022186828970998253); _sage_const_47982815420210848939631963090916124891858755590019708758250635504732488148835047 = Integer(47982815420210848939631963090916124891858755590019708758250635504732488148835047); _sage_const_3 = Integer(3); _sage_const_23 = Integer(23); _sage_const_1 = Integer(1); _sage_const_100 = Integer(100); _sage_const_0 = Integer(0)
from Crypto.Util.number import *

p = _sage_const_94653748632775872562206813156858988240379536044871601072940225022186828970998253 
q = _sage_const_47982815420210848939631963090916124891858755590019708758250635504732488148835047 
n = p * q
e = _sage_const_3 
N = _sage_const_23 

R = Zmod(n)
MS = MatrixSpace(R, N, N)
s = PermutationGroupElement('(1,6,8)(2,3,4,5,7)(9,11,13,15,17,19,21,23)(10,12,14,16,18,20,22)')
P = MS(s.matrix())
with seed(_sage_const_1 ): C = MS([randrange(_sage_const_100 ) for i in range(N*N)])
G = C * P * C**-_sage_const_1 

M = MS(eval(open('enc.txt','r').read())) * (G**-e)

d = power_mod(e,-_sage_const_1 ,(p-_sage_const_1 )*(q-_sage_const_1 ))
print(long_to_bytes(power_mod(M[_sage_const_0 ][_sage_const_0 ],d,n)))

