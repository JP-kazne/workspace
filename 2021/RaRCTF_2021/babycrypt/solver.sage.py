

# This file was *autogenerated* from the file solver.sage
from sage.all_cmdline import *   # import sage library

_sage_const_65537 = Integer(65537); _sage_const_8233844853736079846340942338892377350084205826692932262262169655906024996611709932668810597429977504654174681615645717480946467295158630669046073907212183 = Integer(8233844853736079846340942338892377350084205826692932262262169655906024996611709932668810597429977504654174681615645717480946467295158630669046073907212183); _sage_const_41162916934005887239397941494469703620898846542249479175280452807025539991659 = Integer(41162916934005887239397941494469703620898846542249479175280452807025539991659); _sage_const_2668213429910053210439086430709560263484415254994522634947359490234264025445117346305280609718185533536116506975101248392127837369553056944962889943997393 = Integer(2668213429910053210439086430709560263484415254994522634947359490234264025445117346305280609718185533536116506975101248392127837369553056944962889943997393); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)
from Crypto.Util.number import *

e = _sage_const_65537 
n = _sage_const_8233844853736079846340942338892377350084205826692932262262169655906024996611709932668810597429977504654174681615645717480946467295158630669046073907212183 
hint = _sage_const_41162916934005887239397941494469703620898846542249479175280452807025539991659 
c = _sage_const_2668213429910053210439086430709560263484415254994522634947359490234264025445117346305280609718185533536116506975101248392127837369553056944962889943997393 

x = var('x')
s = solve(x**_sage_const_2  + (hint - _sage_const_1 )*x - n == _sage_const_0 , x)
q = int(s[_sage_const_0 ].right())
p = n // q
assert p*q == n and p >= q

d = power_mod(e, -_sage_const_1 , (p-_sage_const_1 )*(q-_sage_const_1 ))
m = power_mod(c, d, n)
print(long_to_bytes(m))

