from Crypto.Util.number import *

e = 65537
n = 8233844853736079846340942338892377350084205826692932262262169655906024996611709932668810597429977504654174681615645717480946467295158630669046073907212183
hint = 41162916934005887239397941494469703620898846542249479175280452807025539991659
c = 2668213429910053210439086430709560263484415254994522634947359490234264025445117346305280609718185533536116506975101248392127837369553056944962889943997393

x = var('x')
s = solve(x^2 + (hint - 1)*x - n == 0, x)
q = int(s[0].right())
p = n // q
assert p*q == n and p >= q

d = power_mod(e, -1, (p-1)*(q-1))
m = power_mod(c, d, n)
print(long_to_bytes(m))
